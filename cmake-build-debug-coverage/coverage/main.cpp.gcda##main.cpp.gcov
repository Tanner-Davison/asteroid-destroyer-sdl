        -:    0:Source:E:/source/repos/sdl-first-game/src/main.cpp
        -:    0:Graph:E:\source\repos\sdl-first-game\cmake-build-debug-coverage\CMakeFiles\sdl-first-game.dir\src\main.cpp.gcno
        -:    0:Data:E:\source\repos\sdl-first-game\cmake-build-debug-coverage\CMakeFiles\sdl-first-game.dir\src\main.cpp.gcda
        -:    0:Runs:1
        -:    1:#define SDL_MAIN_HANDLED
        -:    2:#include "Player.hpp"
        -:    3:#include "SDL_render.h"
        -:    4:#include "SDL_timer.h"
        -:    5:#include "asteroid.hpp"
        -:    6:#include <algorithm>
        -:    7:#include "createwindow.hpp"
        -:    8:#include "score.hpp"
        -:    9:#include <optional>
        -:   10:#include <vector>
        -:   11:
function _Z13createPlayersi called 0 returned 0% blocks executed 0%
    #####:   12:std::vector<std::unique_ptr<Player>> createPlayers(int count) {
    #####:   13:  int centerX = static_cast<int>(SCREEN_WIDTH / 2);
    #####:   14:  int bottomY = static_cast<int>(SCREEN_HEIGHT - 100);
    #####:   15:  const int PLAYER_SPACING = 70;
    #####:   16:  const int VERTICAL_OFFSET = 50;
    #####:   17:  std::vector<std::unique_ptr<Player>> players;
    #####:   18:  if (count <= 0) {
    %%%%%:   18-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   19:    return players;
    %%%%%:   19-block  0
        -:   20:  }
    #####:   21:  if (count == 1) {
    %%%%%:   21-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
        -:   22:    // Center on Single
    #####:   23:    players.push_back(std::make_unique<Player>(centerX, bottomY));
    %%%%%:   23-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   23-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   23-block  2
call    6 never executed
    $$$$$:   23-block  3
call    7 never executed
    $$$$$:   23-block  4
        -:   24:  } else {
        -:   25:    // V formation logic
    #####:   26:    int middleIndex = count / 2;
    #####:   27:    for (int i = 0; i < count; ++i) {
    %%%%%:   27-block  0
    %%%%%:   27-block  1
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:   28:      int offsetX = (i - middleIndex) * PLAYER_SPACING;
    #####:   29:      int offsetY = std::abs(i - middleIndex) * VERTICAL_OFFSET;
    #####:   30:      players.push_back(
    %%%%%:   30-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   31:          std::make_unique<Player>(centerX + offsetX, bottomY - offsetY));
    %%%%%:   31-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   31-block  1
call    3 never executed
    $$$$$:   31-block  2
call    4 never executed
    $$$$$:   31-block  3
    $$$$$:   31-block  4
    $$$$$:   31-block  5
        -:   32:    }
        -:   33:  }
        -:   34:
    #####:   35:  return players;
    %%%%%:   35-block  0
    =====:   36:}
    $$$$$:   36-block  0
call    0 never executed
function main called 1 returned 100% blocks executed 3%
        1:   37:int main(int argc, char *args[]) {
        1:   38:  if (!init()) {
        1:   38-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   38-block  1
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        1:   39:    printf("Failed to initialize!\n");
        1:   39-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   40:    return 1;
        1:   40-block  0
        -:   41:  }
        -:   42:
    #####:   43:  int imgFlags = IMG_INIT_PNG;
        -:   44:
    #####:   45:  if (!(IMG_Init(imgFlags) & imgFlags)) {
    %%%%%:   45-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   45-block  1
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:   46:    printf("SDL_image could not initialize! SDL_image Error: %s\n",
    %%%%%:   46-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   46-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
        -:   47:           IMG_GetError());
    #####:   48:    return 1;
    %%%%%:   48-block  0
        -:   49:  }
    #####:   50:  int deathCount = 3;
    #####:   51:  Score scoreDisplay;
    %%%%%:   51-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   52:  auto players = createPlayers(3);
    %%%%%:   52-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:   53:
    #####:   54:  for (auto &player : players) {
    %%%%%:   54-block  0
call    0 never executed
call    1 never executed
    %%%%%:   54-block  1
call    2 never executed
    %%%%%:   54-block  2
call    3 never executed
    %%%%%:   54-block  3
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:   55:    if (!player->loadTexture("src/spaceship.png", gRenderer)) {
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:   55-block  0
branch  4 never executed (fallthrough)
branch  5 never executed
    #####:   56:      printf("Failed to load player3 texture\n");
    %%%%%:   56-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   57:      return 1;
    %%%%%:   57-block  0
        -:   58:    }
        -:   59:  }
        -:   60:  // ASTEROIDS
    #####:   61:  std::vector<Asteroid> asteroids;
    #####:   62:  for (int i = 0; i < 19; i++) {
    %%%%%:   62-block  0
    %%%%%:   62-block  1
    %%%%%:   62-block  2
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:   63:    asteroids.emplace_back(players);
    %%%%%:   63-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   64:    if (!asteroids.back().loadTexture("src/asteroid.png", gRenderer)) {
    %%%%%:   64-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:   64-block  1
branch  4 never executed (fallthrough)
branch  5 never executed
    #####:   65:      printf("Failed to load asteroid texture for asteroid %d\n", i);
    %%%%%:   65-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   66:      return 1;
    %%%%%:   66-block  0
        -:   67:    }
        -:   68:  }
        -:   69:
        -:   70:  SDL_Event e;
    #####:   71:  bool quit = false;
        -:   72:
        -:   73:  // MY TIMESTEP VARS
    #####:   74:  const float FIXED_TIME_STEP = 1.0f / 120.0f; //(8.33ms)
    #####:   75:  float accumulator = 0.0f;
    #####:   76:  Uint32 lastTime = SDL_GetTicks();
    %%%%%:   76-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:   77:
        -:   78:  // FRAME RATE CAP
    #####:   79:  const float FPS = 120.0f;
    #####:   80:  const float frameDelay = 1000.0f / FPS;
        -:   81:
    #####:   82:  while (!quit) {
    %%%%%:   82-block  0
    %%%%%:   82-block  1
branch  0 never executed
branch  1 never executed (fallthrough)
        -:   83:    // FRAME TIMING
    #####:   84:    Uint32 currentTime = SDL_GetTicks();
    %%%%%:   84-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   85:    float deltaTime = (currentTime - lastTime) / 1000.0f;
    #####:   86:    lastTime = currentTime;
    #####:   87:    deltaTime = std::min(deltaTime, 0.25f); // Cap max frame time
    %%%%%:   87-block  0
call    0 never executed
    #####:   88:    accumulator += deltaTime;
        -:   89:
        -:   90:    // Handle SDL events
    #####:   91:    while (SDL_PollEvent(&e)) {
    %%%%%:   91-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   91-block  1
branch  3 never executed
branch  4 never executed (fallthrough)
    #####:   92:      if (e.type == SDL_QUIT) {
    %%%%%:   92-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   93:        quit = true;
    %%%%%:   93-block  0
        -:   94:      }
        -:   95:    }
        -:   96:
        -:   97:    // Get keyboard state
    #####:   98:    const Uint8 *keyState = SDL_GetKeyboardState(NULL);
    %%%%%:   98-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:   99:
        -:  100:    // TIMESTEP UPDATE LOOP
    #####:  101:    while (accumulator >= FIXED_TIME_STEP) {
    %%%%%:  101-block  0
    %%%%%:  101-block  1
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  102:      // Update player positions based on input
    #####:  103:      for (auto &player : players) {
    %%%%%:  103-block  0
call    0 never executed
call    1 never executed
    %%%%%:  103-block  1
call    2 never executed
    %%%%%:  103-block  2
call    3 never executed
    %%%%%:  103-block  3
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  104:        player->handlePlayerInputAndPosition(keyState);
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  105:      }
        -:  106:
        -:  107:      // Update asteroids and handle bullet collisions
    #####:  108:      std::vector<size_t> asteroidsToRemove;
    #####:  109:      for (auto &asteroid : asteroids) {
    %%%%%:  109-block  0
call    0 never executed
call    1 never executed
    %%%%%:  109-block  1
call    2 never executed
    %%%%%:  109-block  2
call    3 never executed
    %%%%%:  109-block  3
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  110:        SDL_Rect asteroidRect = {asteroid.getRectX(), asteroid.getRectY(),
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  111:                                 asteroid.getRectWidth(),
    #####:  112:                                 asteroid.getRectHeight()};
    %%%%%:  112-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  112-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  112-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
        -:  113:
    #####:  114:        bool asteroidHit = false;
        -:  115:        // BULLET <----> ASTEROID DETECTION
    #####:  116:        for (auto &player : players) {
    %%%%%:  116-block  0
call    0 never executed
call    1 never executed
    %%%%%:  116-block  1
call    2 never executed
    %%%%%:  116-block  2
call    3 never executed
    %%%%%:  116-block  3
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
        -:  117:          auto bulletIndex =
    #####:  118:              player->getWeapon().checkBulletCollision(asteroidRect);
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  118-block  0
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    #####:  119:          if (bulletIndex.has_value()) {
    %%%%%:  119-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  120:            printf("Bullet %zu hit asteroid at position: %d, %d\n",
    %%%%%:  120-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  120-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    #####:  121:                   bulletIndex.value(), asteroid.getRectX(),
    %%%%%:  121-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  121-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
        -:  122:                   asteroid.getRectY());
    #####:  123:            player->getWeapon().destroyBullet(bulletIndex.value());
    %%%%%:  123-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  123-block  1
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  123-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    #####:  124:            asteroid.destroy();
    %%%%%:  124-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  125:            scoreDisplay.setScore(100);
    %%%%%:  125-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  126:            break;
    %%%%%:  126-block  0
        -:  127:          }
        -:  128:        }
    #####:  129:        if (asteroidHit)
    %%%%%:  129-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  130:          break;
    %%%%%:  130-block  0
        -:  131:      }
        -:  132:
        -:  133:      // MARK DESTROYED ASTEROIDS
    #####:  134:      for (size_t i = 0; i < asteroids.size(); i++) {
    %%%%%:  134-block  0
    %%%%%:  134-block  1
    %%%%%:  134-block  2
call    0 never executed
branch  1 never executed
branch  2 never executed (fallthrough)
    #####:  135:        if (asteroids[i].isDestroyed()) {
    %%%%%:  135-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  135-block  1
branch  4 never executed (fallthrough)
branch  5 never executed
    #####:  136:          asteroidsToRemove.push_back(i);
    %%%%%:  136-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  137:        }
        -:  138:      }
        -:  139:
        -:  140:      // REMOVE DESTROYED ASTROIDS IN REVERSE
    #####:  141:      for (auto it = asteroidsToRemove.rbegin(); it != asteroidsToRemove.rend();
    %%%%%:  141-block  0
call    0 never executed
    %%%%%:  141-block  1
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed (fallthrough)
    #####:  142:           ++it) {
    %%%%%:  142-block  0
call    0 never executed
    #####:  143:        if (*it < asteroids.size()) {
    %%%%%:  143-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  144:          asteroids.erase(asteroids.begin() + *it);
    %%%%%:  144-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  144-block  1
    $$$$$:  144-block  2
    $$$$$:  144-block  3
    $$$$$:  144-block  4
        -:  145:        }
        -:  146:      }
        -:  147:
        -:  148:      // PLAYER <--> ASTEROID DETECTION
    #####:  149:      std::vector<Player *> playersToRemove;
    #####:  150:      for (const auto &player : players) {
    %%%%%:  150-block  0
call    0 never executed
call    1 never executed
    %%%%%:  150-block  1
call    2 never executed
    %%%%%:  150-block  2
call    3 never executed
    %%%%%:  150-block  3
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  151:        SDL_Rect playerRect = {player->getPosition().first,
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  152:                               player->getPosition().second, player->getWidth(),
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
call    3 never executed
    #####:  153:                               player->getHeight()};
    %%%%%:  153-block  0
call    0 never executed
    %%%%%:  153-block  1
call    1 never executed
call    2 never executed
call    3 never executed
        -:  154:
    #####:  155:        for (const auto &asteroid : asteroids) {
call    0 never executed
call    1 never executed
    %%%%%:  155-block  0
call    2 never executed
    %%%%%:  155-block  1
call    3 never executed
    %%%%%:  155-block  2
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  156:          SDL_Rect asteroidRect = {asteroid.getRectX(), asteroid.getRectY(),
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  157:                                   asteroid.getRectWidth(),
    #####:  158:                                   asteroid.getRectHeight()};
    %%%%%:  158-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  158-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  158-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
        -:  159:
    #####:  160:          if (player->checkCollision(playerRect, asteroidRect)) {
    %%%%%:  160-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  160-block  1
branch  4 never executed (fallthrough)
branch  5 never executed
        -:  161:            // TODO: Refactor single player respawn logic into separate function
        -:  162:            // TODO: Add proper game over state handling
        -:  163:            // TODO: Consider adding invulnerability frames after respawnj
    #####:  164:            if (players.size() == 1) {
    %%%%%:  164-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  165:              players.clear();
    %%%%%:  165-block  0
call    0 never executed
    #####:  166:              players = createPlayers(++deathCount);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  166-block  0
call    3 never executed
call    4 never executed
    $$$$$:  166-block  1
    #####:  167:              for (auto &player : players) {
call    0 never executed
call    1 never executed
    %%%%%:  167-block  0
call    2 never executed
    %%%%%:  167-block  1
call    3 never executed
    %%%%%:  167-block  2
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  168:                if (!player->loadTexture("src/spaceship.png", gRenderer)) {
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  168-block  0
branch  4 never executed (fallthrough)
branch  5 never executed
    #####:  169:                  printf("Failed to load player3 texture\n");
    %%%%%:  169-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  170:                  return 1;
    %%%%%:  170-block  0
        -:  171:                }
        -:  172:              }
        -:  173:            }
    #####:  174:            playersToRemove.push_back(player.get());
    %%%%%:  174-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$:  174-block  1
    #####:  175:            scoreDisplay.setScore(-100);
    %%%%%:  175-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  176:            break;
    %%%%%:  176-block  0
    %%%%%:  176-block  1
        -:  177:          }
        -:  178:        }
        -:  179:      }
        -:  180:
        -:  181:      // REMOVE DESTROYED PLAYERS
    #####:  182:      players.erase(
call    0 never executed
    %%%%%:  182-block  0
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    $$$$$:  182-block  1
    $$$$$:  182-block  2
    #####:  183:          std::remove_if(
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    $$$$$:  183-block  0
        -:  184:              players.begin(), players.end(),
function _ZZ4mainENKUlRKSt10unique_ptrI6PlayerSt14default_deleteIS0_EEE_clES5_ called 0 returned 0% blocks executed 0%
    #####:  185:              [&playersToRemove](const std::unique_ptr<Player> &player) {
    #####:  186:                return std::find(playersToRemove.begin(), playersToRemove.end(),
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$:  186-block  0
    #####:  187:                                 player.get()) != playersToRemove.end();
    %%%%%:  187-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    %%%%%:  187-block  1
call    3 never executed
    %%%%%:  187-block  2
    %%%%%:  187-block  3
    $$$$$:  187-block  4
        -:  188:              }),
    #####:  189:          players.end());
    %%%%%:  189-block  0
call    0 never executed
    $$$$$:  189-block  1
        -:  190:
        -:  191:      // UPDATE ASTEROID POSITIONS
    #####:  192:      for (auto &asteroid : asteroids) {
    %%%%%:  192-block  0
call    0 never executed
call    1 never executed
    %%%%%:  192-block  1
call    2 never executed
    %%%%%:  192-block  2
call    3 never executed
    %%%%%:  192-block  3
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  193:        asteroid.update();
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  194:      }
        -:  195:
    #####:  196:      accumulator -= FIXED_TIME_STEP;
    #####:  197:    }
    %%%%%:  197-block  0
    %%%%%:  197-block  1
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  197-block  2
    %%%%%:  197-block  3
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    $$$$$:  197-block  4
call    6 never executed
    $$$$$:  197-block  5
call    7 never executed
        -:  198:
        -:  199:    // RENDERING (HAPPENS EVERY FRAME)
    #####:  200:    SDL_SetRenderDrawColor(gRenderer, 0, 0, 0, 255);
    %%%%%:  200-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  201:    SDL_RenderClear(gRenderer);
    %%%%%:  201-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  202:
        -:  203:    // RENDER GAME OBJECTS
    #####:  204:    scoreDisplay.renderScore(gRenderer);
    %%%%%:  204-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  205:    for (auto &player : players) {
    %%%%%:  205-block  0
call    0 never executed
call    1 never executed
    %%%%%:  205-block  1
call    2 never executed
    %%%%%:  205-block  2
call    3 never executed
    %%%%%:  205-block  3
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  206:      player->renderPlayer(gRenderer);
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  207:    }
    #####:  208:    for (auto &asteroid : asteroids) {
    %%%%%:  208-block  0
call    0 never executed
call    1 never executed
    %%%%%:  208-block  1
call    2 never executed
    %%%%%:  208-block  2
call    3 never executed
    %%%%%:  208-block  3
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  209:      asteroid.renderAsteroid(gRenderer);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  210:    }
        -:  211:
    #####:  212:    SDL_RenderPresent(gRenderer);
    %%%%%:  212-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  213:
        -:  214:    // FRAME RATE CAPPING
    #####:  215:    Uint32 endTime = SDL_GetTicks();
    %%%%%:  215-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  216:    float elapsedMS = endTime - currentTime;
    #####:  217:    if (frameDelay > elapsedMS) {
    %%%%%:  217-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  218:      SDL_Delay(frameDelay - elapsedMS);
    %%%%%:  218-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  219:    }
        -:  220:  }
    #####:  221:  close();
    %%%%%:  221-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  222:  return 0;
    %%%%%:  222-block  0
    #####:  223:}
    %%%%%:  223-block  0
call    0 never executed
    %%%%%:  223-block  1
call    1 never executed
call    2 never executed
    $$$$$:  223-block  2
call    3 never executed
    $$$$$:  223-block  3
call    4 never executed
    $$$$$:  223-block  4
call    5 never executed
