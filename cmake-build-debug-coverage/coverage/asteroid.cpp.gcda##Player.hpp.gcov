        -:    0:Source:E:/source/repos/sdl-first-game/src/Player.hpp
        -:    0:Graph:E:\source\repos\sdl-first-game\cmake-build-debug-coverage\CMakeFiles\sdl-first-game.dir\src\asteroid.cpp.gcno
        -:    0:Data:E:\source\repos\sdl-first-game\cmake-build-debug-coverage\CMakeFiles\sdl-first-game.dir\src\asteroid.cpp.gcda
        -:    0:Runs:1
        -:    1:#pragma once
        -:    2:#include "SDL_rect.h"
        -:    3:#include "weapon.hpp"
        -:    4:#include <SDL_image.h>
        -:    5:#include <utility>
        -:    6:
        -:    7:struct SDL_Renderer;
        -:    8:
        -:    9:class Player {
        -:   10:private:
        -:   11:  // smooth movement float points
        -:   12:  float rectXf;
        -:   13:  float rectYf;
        -:   14:
        -:   15:  // Rendering position
        -:   16:  int rectX;
        -:   17:  int rectY;
        -:   18:
        -:   19:  // PLAYER SIZE
        -:   20:  int rectWidth = 45;
        -:   21:  int rectHeight = 45;
        -:   22:
        -:   23:  // Physics properties
        -:   24:  float velocityX;
        -:   25:  float velocityY;
        -:   26:  const float MAX_VELOCITY = 3.4f;       // Maximum velocity
        -:   27:  const float BASE_ACCELERATION = .60f;  // BASE_ACCELERATION
        -:   28:  const float BOOST_ACCELERATION = 3.5f; // BOOST_ACCELERATION
        -:   29:  const float DECELERATION = .9930;      // DECELERATION
        -:   30:  float ACCELERATION = .78f;
        -:   31:  // Textures
        -:   32:  SDL_Rect playerRect;
        -:   33:  SDL_Texture *mTexture;
        -:   34:  int textureWidth;
        -:   35:  int textureHeight;
        -:   36:  // Movement state
        -:   37:  bool isMovingUp;
        -:   38:  bool isMovingDown;
        -:   39:  bool isMovingLeft;
        -:   40:  bool isMovingRight;
        -:   41:  bool shooting;
        -:   42:  bool boost;
        -:   43:  // Weapon system
        -:   44:  Weapon weapon;
        -:   45:
        -:   46:public:
        -:   47:  Player();
        -:   48:  Player(int x, int y);
        -:   49:  Player(int x, int y, int width, int height);
        -:   50:  ~Player();
        -:   51:  // Core functions
        -:   52:  void renderPlayer(SDL_Renderer *renderer);
        -:   53:  // input and pos
        -:   54:  void handlePlayerInputAndPosition(const Uint8 *keyState);
        -:   55:  void handleBoundsAndUpdatePosition(float nextX, float nextY);
        -:   56:  bool loadTexture(const char *path, SDL_Renderer *renderer);
        -:   57:  void cleanup(); // Texture
        -:   58:  bool checkCollision(const SDL_Rect &a, const SDL_Rect &b);
        -:   59:
        -:   60:  const Weapon &getWeapon() const;
        -:   61:  Weapon &getWeapon();
        -:   62:  std::pair<int, int> getPosition() const;
        -:   63:
        -:   64:  // get sizes
function _ZNK6Player8getWidthEv called 0 returned 0% blocks executed 0%
    #####:   65:  int getWidth() const { return rectWidth; }
    %%%%%:   65-block  0
function _ZNK6Player9getHeightEv called 0 returned 0% blocks executed 0%
    #####:   66:  int getHeight() const { return rectHeight; }
    %%%%%:   66-block  0
        -:   67:};
